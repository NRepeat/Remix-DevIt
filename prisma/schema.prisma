// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Product {
  id                 Int        @id @default(autoincrement())
  externalId         Int?       @unique 
  title              String 
  description        String
  price              Float
  discountPercentage Float
  rating             Float
  stock              Int
  brand              String
  categoryId         Int
  thumbnail          String
  images             String[]
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  category           Category   @relation(fields: [categoryId], references: [id])
  
  CartItem CartItem[]
}

model Category {
  id          Int        @id @default(autoincrement())
  slug        String     @unique
  name        String
  products    Product[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Customer {
  id          Int        @default(autoincrement()) @id
  email       String     @unique
  name        String
  secondName  String
  password    String 
  cart        Cart?    
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Cart {
  id          Int        @id @default(autoincrement())
  customerId  Int?        @unique
  customer    Customer?   @relation(fields: [customerId], references: [id],onDelete: Cascade)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  cartItems   CartItem[]
}

model CartItem {
  id         Int      @id @default(autoincrement())
  cartId     Int
  productId  Int
  quantity   Int @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id],onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [externalId])
}

model Member { 
  id Int @id @default(autoincrement())
  email String @unique
  password String 
}